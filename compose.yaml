services:
  db:
    image: postgres:15
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    env_file: .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_vape_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - app-network

  vapebotapi:
    build:
      context: .
      dockerfile: Dockerfile
    image: vapebotapi:latest
    env_file: .env
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - Telegram__BotToken=${TELEGRAM__BOTTOKEN}
      - ConnectionStrings__DefaultConnection=${CONNECTIONSTRINGS__DEFAULTCONNECTION}
      - PayPal__ClientID=${PAYPAL__CLIENTID}
      - PayPal__Secret=${PAYPAL__SECRET}
      - NowPaymentsIO__SecretKey=${NOWPAYMENTSIO__SECRETKEY}
      - NowPaymentsIO__IpnKey=${NOWPAYMENTSIO__IPNKEY}
      - Stripe__SecretKey=${STRIPE__SECRETKEY}
      - Stripe__PublishableKey=${STRIPE__PUBLISHABLEKEY}
      - Stripe__SigningSecret=${STRIPE__SigningSecret}
    ports:
      - "5158:8080"
    depends_on:
      - db
    networks:
      - app-network

  cli:
    build:
      context: .
      dockerfile: Dockerfile.cli
    working_dir: /src
    volumes:
      - .:/src
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network
    entrypoint: []
    tty: true

  ngrok:
    image: ngrok/ngrok:latest
    network_mode: "host"            # so ngrok can see host:5158 directly
    env_file:
      - .env
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: http --hostname=${NGROK_HOSTNAME} ${NGROK_FORWARD_PORT}
    restart: unless-stopped

volumes:
  db_data:
  pgadmin_vape_data:

networks:
  app-network:
    driver: bridge
