@page "/OrderDetails"
@using VapeBotApi.Models
@model VapeBotApi.Pages.Checkout.OrderDetailsModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout   = "_Layout";
    bool editable = Model.Order.Status == OrderStatus.New;
}

@if (Model.Order.Status != OrderStatus.New)
{
    <div class="alert alert-warning mt-4">
        @switch (Model.Order.Status)
        {
            case OrderStatus.PaymentPending
                when Model.Order.PaymentMethod == OrderPaymentMethod.Stripe:
                    <p class="text-center">Payment pending.</p>
                    <div class="d-flex justify-content-center mt-2">
                        <button class="btn btn-primary"
                                type="button"
                                onclick="window.location.href='@Model.Order.StripePaymentUrl'">
                            Click here to pay
                        </button>
                    </div>
                break;

            case OrderStatus.PaymentPending
                when Model.Order.PaymentMethod == OrderPaymentMethod.PayID:
                <p class="text-center">Payment pending.</p>
                    <div class="d-flex justify-content-center mt-2">
                        <button class="btn btn-primary"
                                type="button"
                                onclick="window.location.href='https://placeholder.url'">
                            Click here to pay
                        </button>
                    </div>
                break;

            case OrderStatus.PaymentReceived:
                <p class="text-center">Payment received, order will ship shortly.</p>;
                break;

            case OrderStatus.Shipped:
                <p class="text-center">Order shipped, tracking number: @Model.Order.TrackingNumber</p>;
                break;

            case OrderStatus.Completed:
                <p>Order complete.</p>;
                break;

            default:
                <p>Status: @Model.Order.Status</p>;
                break;
        }
    </div>
}

<!-- Order Summary Card -->
<div class="card mb-4 shadow-sm">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0">Order Summary</h5>
    </div>
    <div class="card-body">
        <dl class="row mb-4">
            <dt class="col-sm-4">Order ID</dt>
            <dd class="col-sm-8"><code>@Model.Order.OrderId</code></dd>

            <dt class="col-sm-4">Payment Method</dt>
            <dd class="col-sm-8">@Model.Order.PaymentMethod</dd>

            <dt class="col-sm-4">Shipping Method</dt>
            <dd class="col-sm-8">@Model.Order.Carrier</dd>
        </dl>

        <h6 class="mb-3">Items</h6>
        <table class="table table-striped table-hover">
            <thead class="table-light">
                <tr>
                    <th>Product</th>
                    <th class="text-end">Qty</th>
                    <th class="text-end">Cost</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var li in Model.LineItems)
                {
                    <tr>
                        <td>@li.ProductName</td>
                        <td class="text-end">@li.Quantity</td>
                        <td class="text-end">@li.Price.ToString("C")</td>
                    </tr>
                }
            </tbody>
            <tfoot class="fw-bold">
                <tr>
                    <td colspan="2" class="text-end">Shipping:</td>
                    <td class="text-end">@Model.CarrierCost.ToString("C")</td>
                </tr>
                <tr>
                    <td colspan="2" class="text-end">Sub Total:</td>
                    <td class="text-end">@Model.ItemsTotal.ToString("C")</td>
                </tr>
                <tr>
                    <td colspan="2" class="text-end">Tax:</td>
                    <td class="text-end">@Model.Tax.ToString("C")</td>
                </tr>
                <tr>
                    <td colspan="2" class="text-end">Total:</td>
                    <td class="text-end">@Model.Total.ToString("C")</td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<!-- Shipping Details Form -->
<h2>Shipping Details</h2>
<form method="post">
    <div class="mb-3"></div>
        <input type="hidden" asp-for="Order.OrderId" />
        <input type="hidden" asp-for="Order.Status" />
        <input type="hidden" asp-for="Order.UserChatId" />
        <label asp-for="Order.EmailAddress" class="form-label">Email Address</label>
        <input asp-for="Order.EmailAddress" class="form-control" readonly="@(editable ? null : "readonly")" />
        <span asp-validation-for="Order.EmailAddress" class="text-danger"></span>
    </div>
    
    <div class="row">
        <div class="col-md-6 mb-3">
            <label asp-for="Order.FirstName" class="form-label">First Name</label>
            <input asp-for="Order.FirstName" class="form-control" readonly="@(editable ? null : "readonly")" />
            <span asp-validation-for="Order.FirstName" class="text-danger"></span>
        </div>
        <div class="col-md-6 mb-3">
            <label asp-for="Order.SecondName" class="form-label">Last Name</label>
            <input asp-for="Order.SecondName" class="form-control" readonly="@(editable ? null : "readonly")" />
            <span asp-validation-for="Order.SecondName" class="text-danger"></span>
        </div>
    </div>

    <div class="mb-3">
        <label asp-for="Order.AddressLine1" class="form-label">Address Line 1</label>
        <input asp-for="Order.AddressLine1" class="form-control" readonly="@(editable ? null : "readonly")" />
        <span asp-validation-for="Order.AddressLine1" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Order.AddressLine2" class="form-label">Address Line 2</label>
        <input asp-for="Order.AddressLine2" class="form-control" readonly="@(editable ? null : "readonly")" />
    </div>

    <div class="mb-3">
        <label asp-for="Order.AddressLine3" class="form-label">City</label>
        <input asp-for="Order.AddressLine3" class="form-control" readonly="@(editable ? null : "readonly")" />
    </div>

    <div class="row">
        <div class="col-md-4 mb-3">
            <label asp-for="Order.State" class="form-label">State</label>
            <select asp-for="Order.State" asp-items="Model.States" class="form-select" disabled="@(editable ? null : "disabled")"></select>
            <span asp-validation-for="Order.State" class="text-danger"></span>
        </div>
        <div class="col-md-4 mb-3">
            <label asp-for="Order.ZipCode" class="form-label">Post Code</label>
            <input asp-for="Order.ZipCode" class="form-control" readonly="@(editable ? null : "readonly")" />
            <span asp-validation-for="Order.ZipCode" class="text-danger"></span>
        </div>
        <div class="col-md-4 mb-3">
            <label asp-for="Order.MobileNo" class="form-label">Mobile No.</label>
            <input asp-for="Order.MobileNo" class="form-control" readonly="@(editable ? null : "readonly")" />
            <span asp-validation-for="Order.MobileNo" class="text-danger"></span>
        </div>
    </div>

    <button type="submit" class="btn btn-primary" disabled="@(editable ? null : "disabled")">
      @((editable) ? "Submit" : "Close")
    </button>
</form>

@section Scripts {
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
}
